---
import BlogPostPreview from "@/components/BlogPostPreview";
import SnippetPreview from "@/components/SnippetPreview";
import PageLayout from "@/layouts/Base";
import type { MDXInstance,Page,Post,Snippet } from "@/types";
import { getAllTags,sortMDByDate } from "@/util";

export async function getStaticPaths({ paginate }) {
	const allPosts = await Astro.glob<Post>("../../posts/*.mdx");
	const allSnippets = await Astro.glob<Snippet>("../../snippets/*.mdx");
	const allPostsByDate = sortMDByDate(allPosts);
	const allSnippetsByDate = sortMDByDate(allSnippets);
	const allPostsAndSnippetsByDate = [...allPostsByDate, ...allSnippetsByDate];
	let allTags = [
		...getAllTags(allPostsByDate),
		...getAllTags(allSnippetsByDate),
	];
	// remove duplicates
	allTags = [...new Set(allTags)];

	return allTags.map((tag) => {
		const filterItems = allPostsAndSnippetsByDate.filter((item) =>
			item.frontmatter.tags?.includes(tag)
		);
		return paginate(filterItems, {
			params: { tag },
			pageSize: 10,
		});
	});
}

export interface Props {
	page: Page<MDXInstance<Post | Snippet>>;
}

const { page } = Astro.props as Props;
let blogs = []
let snippets = []

page.data.forEach(element => {
	if (element.frontmatter["layout"].replace("@/layouts/", "") == "Snippet"){
		snippets.push(element)
	} else {
		blogs.push(element)
	}
	
});

const { tag } = Astro.params;
const meta = {
	title: `Tag: ${tag}`,
	description: `View all posts and snippets tagged with ${tag}.`,
};
---

<PageLayout meta={meta}>
	<h1 class="flex items-center mb-6 title">
		Tag: {tag}
	</h1>
	<section aria-label="Blog post list">
		<br/>
		{
			blogs.length > 0 && (
				<h2 class="flex items-center mb-6 text-xl font-bold">Posts</h2>
				<ul class="space-y-8 text-left">
					{blogs.map((p) => (
						<li class="[&_q]:w-full flex flex-wrap items-center gap-x-2">
							<BlogPostPreview post={p} as="h2" withDesc />
						</li>
					))}
				</ul>
			)
		}
		<br/>
		<br/>
		{
			snippets.length > 0 && (
				<h2 class="flex items-center mb-6 text-xl font-bold">Snippets</h2>
				<ul class="space-y-8 text-left">
					{snippets.map((p) => (
						<li class="[&_q]:w-full flex flex-wrap items-center gap-x-2">
							<SnippetPreview snippet={p} as="h2" withDesc />
						</li>
					))}
				</ul>
			)
		}
	</section>
</PageLayout>
