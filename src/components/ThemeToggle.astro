<script>
  import siteMeta from "../site-meta.config";
  import { elementHasClass } from "@/util";

  document.addEventListener("DOMContentLoaded", () => {
    const root = document.documentElement;
    const oSColorScheme = window.matchMedia("(prefers-color-scheme: dark)");
    const colorThemeMetaTag = document.querySelector(
      "meta[name='theme-color']"
    );
    const toggleThemeButton = document.getElementById("toggle-theme");
    const darkSvgIcon = document.getElementById("toggle-theme-dark");
    const lightSvgIcon = document.getElementById("toggle-theme-light");

    const toggleDarkMode = (isDark) => {
      const rootHasDark = elementHasClass(root, "dark");
      const lightSvgHidden = elementHasClass(lightSvgIcon, "hidden");
      const darkSvgHidden = elementHasClass(darkSvgIcon, "hidden");
      // Toggle/change classes/aria/meta based on isDark:boolean
      if (isDark) {
        if (!rootHasDark) {
          root.classList.add("dark");
        }
        if (!lightSvgHidden) {
          lightSvgIcon.classList.add("hidden");
        }
        if (darkSvgHidden) {
          darkSvgIcon.classList.remove("hidden");
        }
        colorThemeMetaTag.setAttribute("content", siteMeta.themeColorDark);
        toggleThemeButton.setAttribute("aria-label", "Activate Light Mode");
      } else {
        if (rootHasDark) {
          root.classList.remove("dark");
        }
        if (lightSvgHidden) {
          lightSvgIcon.classList.remove("hidden");
        }
        if (!darkSvgHidden) {
          darkSvgIcon.classList.add("hidden");
        }
        colorThemeMetaTag.setAttribute("content", siteMeta.themeColorLight);
        toggleThemeButton.setAttribute("aria-label", "Activate Dark Mode");
      }
      // Keep localStore in sync
      if (localStorage.getItem("theme") !== isDark) {
        localStorage.setItem("theme", isDark ? "dark" : "light");
      }
    };

    // State from document.documentElement
    let darkModeState = elementHasClass(root, "dark");

    // Initial setting
    toggleDarkMode(darkModeState);

    // Listen to OS changes
    oSColorScheme.addEventListener("change", (evnt) => {
      toggleDarkMode(evnt.matches);
    });
    // Theme Btn click
    toggleThemeButton.addEventListener("click", () => {
      darkModeState = !darkModeState;
      toggleDarkMode(darkModeState);
    });
  });
</script>

<button type="button" id="toggle-theme" class="ml-auto">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    id="toggle-theme-dark"
    aria-hidden="true"
    class="hidden mt-1 h-7 w-7 fill-surface-content"
    viewBox="0 0 256 256"
    ><path
      d="M120,40V16a8,8,0,0,1,16,0V40a8,8,0,0,1-16,0Zm8,24a64,64,0,1,0,64,64A64.07,64.07,0,0,0,128,64ZM58.34,69.66A8,8,0,0,0,69.66,58.34l-16-16A8,8,0,0,0,42.34,53.66Zm0,116.68-16,16a8,8,0,0,0,11.32,11.32l16-16a8,8,0,0,0-11.32-11.32ZM192,72a8,8,0,0,0,5.66-2.34l16-16a8,8,0,0,0-11.32-11.32l-16,16A8,8,0,0,0,192,72Zm5.66,114.34a8,8,0,0,0-11.32,11.32l16,16a8,8,0,0,0,11.32-11.32ZM48,128a8,8,0,0,0-8-8H16a8,8,0,0,0,0,16H40A8,8,0,0,0,48,128Zm80,80a8,8,0,0,0-8,8v24a8,8,0,0,0,16,0V216A8,8,0,0,0,128,208Zm112-88H216a8,8,0,0,0,0,16h24a8,8,0,0,0,0-16Z"
    ></path></svg
  >
  <svg
    id="toggle-theme-light"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    class="hidden mt-1 h-7 w-7 fill-surface-content"
    viewBox="0 0 256 256"
    ><path
      d="M200,40a8,8,0,0,0,0,16,16,16,0,0,1,16,16v56H40V72A16,16,0,0,1,56,56a8,8,0,0,0,0-16A32,32,0,0,0,24,72v92a44,44,0,0,0,88,0V144h32v20a44,44,0,0,0,88,0V72A32,32,0,0,0,200,40ZM91.22,179.22a8,8,0,0,1-11.31,0L58.34,157.66a8,8,0,0,1,11.32-11.32l21.56,21.57A8,8,0,0,1,91.22,179.22Zm120,0a8,8,0,0,1-11.31,0l-21.57-21.56a8,8,0,0,1,11.32-11.32l21.56,21.57A8,8,0,0,1,211.22,179.22Z"
    ></path></svg
  >
</button>
