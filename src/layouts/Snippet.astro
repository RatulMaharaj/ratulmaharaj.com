---
import Paginator from "@/components/Paginator";
import type { Snippet } from "@/types";
import {
	getLocaleTime,
	getPreviousAndNextSnippets,
	sortMDByDate,
} from "src/util";
import BaseLayout from "./Base.astro";

const {
	content: { title, description, pubDate, tags },
} = Astro.props;
const date = new Date(pubDate);
const datetime = date.toISOString();
const postDate = getLocaleTime(date);
const currentPage = new URL(Astro.request.url).pathname;
const allSnippets = await Astro.glob<Snippet>("../pages/snippets/*.mdx");

const allSortedSnippets = sortMDByDate(allSnippets);
const { prev, next } = getPreviousAndNextSnippets(
	currentPage,
	allSortedSnippets
);
const paginationProps = {
	...(prev && {
		prevUrl: {
			url: prev.url,
			text: `← ${prev.frontmatter.title}`,
			srLabel: " Previous Snippet:",
		},
	}),
	...(next && {
		nextUrl: {
			url: next.url,
			text: `${next.frontmatter.title} →`,
			srLabel: "Next Snippet:",
		},
	}),
};
---

<BaseLayout meta={{ title, description }}>
	<div class="sm:grid sm:grid-cols-[1fr] sm:items-start">
		<article>
			<h1 class="title">{title}</h1>
			<time datetime={datetime} class="uppercase font-bold text-xs text-gray-500">{postDate}</time>
			<p class="mt-8">{description}</p>
			<div
				id="snippet_container"
				class="mt-12 mx-0 "
			>
				<slot />
			</div>
		</article>
	</div>
	<div class="mt-10">
		{
			tags?.length && (
				<ul class="flex items-center py-4">
					{tags.map((tag: string) => (
						<li>
							<a
								class="category-tag"
								aria-label={`View more blogs with the tag ${tag}`}
								href={`/tags/${tag}`}
								>
								{tag}
							</a>
						</li>
						))}
				</ul>
				)
		}
		<Paginator {...paginationProps} />
	</div>
</BaseLayout>

<style>
	/* Hide the weird code block adding the language */
	:global(article pre .language-id) {
		@apply hidden;
	}
</style>
